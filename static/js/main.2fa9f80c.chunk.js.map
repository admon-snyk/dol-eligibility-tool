{"version":3,"sources":["components/helper-components/Button.tsx","components/helper-components/Card.tsx","components/helper-components/Spinner.tsx","lib/merge.ts","components/helper-components/Markdown.tsx","contexts/language.tsx","hooks/useLocalStorage.ts","components/form-components/DatePicker.tsx","components/form-components/TextInput.tsx","components/helper-components/StyledSelect.tsx","components/form-components/Select.tsx","components/form-components/SingleSelect.tsx","components/form-components/Boolean.tsx","components/helper-components/CircleIcon.tsx","components/form-components/Multiselect.tsx","components/form-components/TextArea.tsx","lib/states.ts","components/form-components/StateSelect.tsx","components/form-components/Caret.tsx","components/form-components/Section.tsx","hooks/useKeyPress.ts","components/form-components/Number.tsx","components/form-components/File.tsx","forms/index.ts","components/form-components/Checkbox.tsx","lib/validation.ts","lib/inline.ts","contexts/form.tsx","components/Sidebar.tsx","components/Question.tsx","components/PDF.tsx","components/Form.tsx","components/USDR.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Button","props","label","rest","className","primary","fill","gap","style","icon","paddingLeft","reverse","paddingRight","paddingTop","paddingBottom","Paragraph","margin","fontWeight","undefined","Card","children","otherProps","Box","background","border","borderRadius","spinning","version","viewBox","width","height","opacity","d","attributeName","type","from","to","dur","repeatCount","Spinner","align","justify","merge","result","sources","source","Object","keys","key","ListItem","styleProps","Markdown","size","headings","map","n","component","Heading","level","vertical","components","li","p","span","a","target","rel","initialState","language","setLanguage","LanguageContext","createContext","LanguageProvider","defaultValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","storedValue","setStoredValue","value","setItem","stringify","useLocalStorage","useEffect","detectedLanguageCode","en","es","zh","navigator","Provider","DatePicker","v","question","useContext","FormContext","values","setValue","id","moment","toDate","maxWidth","pad","horizontal","onChange","date","utc","format","clearIcon","calendarIcon","TextInput","errors","hasError","Boolean","e","StyledSelect","open","setOpen","onOpen","onClose","Select","translateCopy","options","option","name","a11yTitle","top","labelKey","valueKey","reduce","SingleSelectRadio","o","RadioButtonGroup","split","form","instructions","SingleSelect","CircleIcon","color","s","b","flex","shrink","Multiselect","isSelected","includes","bottom","CheckBox","checked","direction","right","fontSize","selectedOptions","selected","push","splice","indexOf","additionalValues","additionalKeys","sections","length","omit","filter","onSelect","TextArea","states","state","StateSelect","Caret","transform","xmlns","stroke","strokeWidth","Section","optionPressed","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","addEventListener","removeEventListener","useKeyPress","sectionGroup","getSections","backgroundColor","index","section","icons","sort","i1","i2","localeCompare","overflowWrap","transitionDuration","overflow","onClick","title","onToggle","hoverIndicator","i","maxHeight","content","Number","typeProps","allowNegative","prefix","thousandSeparator","decimalScale","allowEmptyFormatting","mask","customInput","GrommetTextInput","onValueChange","floatValue","File","translateByID","onDrop","acceptedFiles","Promise","all","file","resolve","reader","FileReader","onerror","onabort","onload","contents","encode","readAsArrayBuffer","files","f","useDropzone","minSize","maxSize","accept","getRootProps","getInputProps","isDragActive","isFocused","onRemove","alignContent","outline","cursor","display","left","FormNextLink","Image","src","Checkmark","FormClose","padding","getFlattenedQuestions","questions","flattenedQuestions","switch","getSwitch","subQuestions","typeComponentMappings","shorttext","dropdown","boolean","multiselect","longtext","decimal","NumberComponent","integer","phone","ssn","checkbox","classnames","errored","Sections","questionSwitch","switchKeys","toString","Array","isArray","some","val","sectionIds","out","include","entries","getInstructions","c","Error","isQuestionValid","required","dependencies","validate","schema","copyID","strict","presence","Joi","string","validator","number","precision","min","max","allow","custom","helpers","isValid","find","array","items","regex","object","optional","valid","forEach","validation","validationValue","startsWith","slice","RegExp","test","ISO_8601","other","od","isSameOrAfter","isSameOrBefore","unit","add","transformInlineDefinitions","definitions","transformInlineDefinitionsQuestions","qi","switchKey","oldSwitch","newSwitch","si","definitionID","replace","definition","pi","pages","setError","FormProvider","setForm","setValues","setErrors","completion","setCompletion","pageIndex","setPageIndex","formValidationError","setFormValidationError","ky","get","text","formSample","yaml","safeLoad","json","sampleContents","message","rawForm","effect","catch","err","useCallback","copy","variables","m","questionID","String","document","description","querySelector","createElement","setAttribute","head","appendChild","log","gtag","amplitude","getInstance","logEvent","newValues","k","validationErrors","newErrors","page","dep","q","depErrors","canContinueFromPage","questionIds","every","canContinue","setPage","scrollTo","languages","Sidebar","ResponsiveContext","currentPage","maxCompletedPage","range","j","percent","Math","floor","canClickPage","seal","objectFit","prevLanguage","newLanguage","disabled","disabledKey","Text","Question","switchComponent","Component","autoscroll","scrollIntoView","behavior","ref","el","styles","StyleSheet","create","flexDirection","pageContent","flexGrow","heading","marginBottom","questionTitle","questionAnswer","sectionTitle","sectionContent","questionSection","borderTop","linkRegex","processLinks","match","p1","p2","Icon","marginRight","alignItems","justifyContent","PDF","concat","multiselectAnswers","optionId","removeMarkdown","getValue","isPresentationalQuestion","Form","pageTitles","pageComponents","previousURL","setPreviousURL","onDownload","fileName","pdf","toBlob","blob","msSaveBlob","body","url","URL","createObjectURL","click","revokeObjectURL","grow","FormPrevious","FormNext","USDR","Header","Footer","elevation","href","tabIndex","init","shim","TextEncoder","sizing","theme","global","colors","dark","light","focus","control","radius","paragraph","small","medium","large","xlarge","xxlarge","1","2","3","4","5","6","select","container","radioButton","button","checkBox","check","App","Grommet","location","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2fa9f80c.chunk.js","sourcesContent":["import React from 'react'\nimport { Button as GrommetButton, ButtonProps, Paragraph } from 'grommet'\n\nconst Button: React.FC<ButtonProps & Omit<JSX.IntrinsicElements['button'], 'color'>> = (props) => {\n  const { label, ...rest } = props\n\n  return (\n    <GrommetButton\n      className={props.primary ? 'primary-button' : 'default-button'}\n      fill={false}\n      gap=\"xxsmall\"\n      style={\n        props.icon\n          ? {\n              paddingLeft: props.reverse ? '24px' : '12px',\n              paddingRight: props.reverse ? '12px' : '24px',\n              paddingTop: '6px',\n              paddingBottom: '6px',\n            }\n          : {\n              paddingTop: '6px',\n              paddingBottom: '6px',\n            }\n      }\n      label={\n        label ? (\n          <Paragraph margin=\"none\" style={{ fontWeight: 500 }}>\n            {label}\n          </Paragraph>\n        ) : undefined\n      }\n      {...rest}\n    />\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport { Box, BoxProps } from 'grommet'\n\ninterface Props extends BoxProps {\n  ref?: React.Ref<HTMLDivElement>\n}\n\nconst Card: React.FC<Props> = (props) => {\n  const { children, ...otherProps } = props\n  return (\n    <Box\n      className=\"card\"\n      background=\"#FFFFFF\"\n      style={{\n        border: '2px solid #CCCCCC',\n        borderRadius: '8px',\n      }}\n      {...otherProps}\n    >\n      {children}\n    </Box>\n  )\n}\n\nexport default Card\n","// https://codesandbox.io/s/loaders-and-spinners-4jltk?file=/components/Spinner/SpinnerBrand.js:0-719\n\nimport React from 'react'\nimport { Box } from 'grommet'\n\nconst spinning = (\n  <svg version=\"1.1\" viewBox=\"0 0 32 32\" width=\"28px\" height=\"28px\" fill=\"#7D4CDB\">\n    <path opacity=\".25\" d=\"M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4\" />\n    <path d=\"M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z\">\n      <animateTransform\n        attributeName=\"transform\"\n        type=\"rotate\"\n        from=\"0 16 16\"\n        to=\"360 16 16\"\n        dur=\"0.8s\"\n        repeatCount=\"indefinite\"\n      />\n    </path>\n  </svg>\n)\n\nexport const Spinner = () => (\n  <Box align=\"center\" justify=\"center\">\n    {spinning}\n  </Box>\n)\n","export function merge(...sources: Record<string, any>[]) {\n  const result: Record<string, any> = {}\n  for (const source of sources) {\n    for (const key of Object.keys(source)) {\n      if (source[key]) {\n        result[key] = source[key]\n      }\n    }\n  }\n\n  return result\n}\n","import React from 'react'\nimport { Box, Markdown as GrommetMarkdown, Paragraph, ParagraphProps, Heading } from 'grommet'\nimport { MarginType } from 'grommet/utils'\nimport { merge } from '../../lib/merge'\n\nconst ListItem: React.FC = ({ children, ...styleProps }) => {\n  return (\n    <li>\n      <Paragraph fill={true} margin=\"none\" {...styleProps}>\n        {children}\n      </Paragraph>\n    </li>\n  )\n}\n\ninterface Props {\n  size?: ParagraphProps['size']\n  margin?: MarginType\n}\n\nexport const Markdown: React.FC<Props> = ({ margin, size, children }) => {\n  // Grommet allows you to override what React component is used for various\n  // HTML elements. It handles a few components by default, but there are a few\n  // extra cases we want to handle (or customize).\n  const headings = [1, 2, 3, 4, 5, 6].map((n) => ({\n    [`h${n}`]: {\n      /* eslint-disable-next-line react/display-name */\n      component: (props: any) => <Heading level={n as any} {...props} />,\n      props: merge({ margin: { vertical: n > 4 ? 'none' : 'small' } }, { margin, size }),\n    },\n  }))\n  return (\n    <Box className=\"markdown\">\n      <GrommetMarkdown\n        components={merge(\n          {\n            li: {\n              component: ListItem,\n              props: merge({ margin, size }),\n            },\n            p: {\n              component: Paragraph,\n              props: merge({ fill: true }, { margin, size }),\n            },\n            span: {\n              component: Paragraph,\n              props: merge({ fill: true, size: 'small' }, { margin, size }),\n            },\n            a: {\n              props: { target: '_blank', rel: 'noopener noreferrer' },\n            },\n          },\n          ...headings\n        )}\n      >\n        {children}\n      </GrommetMarkdown>\n    </Box>\n  )\n}\n","import React, { createContext, useEffect } from 'react'\nimport { useLocalStorage } from '../hooks/useLocalStorage'\n\nconst initialState = {\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  /* eslint-disable @typescript-eslint/no-empty-function */\n  language: 'en',\n  setLanguage: (language: string) => {},\n}\nexport const LanguageContext = createContext(initialState)\n\nexport const LanguageProvider: React.FC = (props) => {\n  const [language, setLanguage] = useLocalStorage<string>('papua-selected-language', initialState.language)\n\n  // Check the user's browser's language and automatically match that.\n  useEffect(() => {\n    const codeMap: Record<string, string> = {\n      en: 'en',\n      'en-US': 'en',\n      'en-GB': 'en',\n      es: 'es',\n      zh: 'zh',\n    }\n    const detectedLanguageCode = codeMap[navigator.language]\n\n    if (detectedLanguageCode && !language) {\n      setLanguage(detectedLanguageCode)\n    }\n  }, [language, setLanguage])\n\n  const value = { language: language, setLanguage }\n  return <LanguageContext.Provider value={value}>{props.children}</LanguageContext.Provider>\n}\n","import { useState } from 'react'\n\n// Copied from https://usehooks.com/useLocalStorage/\nexport function useLocalStorage<T>(key: string, defaultValue: T): [T, (value: T) => void] {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? JSON.parse(item) : defaultValue\n    } catch (error) {\n      console.error(error)\n      return defaultValue\n    }\n  })\n\n  const setValue = (value: T) => {\n    try {\n      setStoredValue(value)\n      window.localStorage.setItem(key, JSON.stringify(value))\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return [storedValue, setValue]\n}\n","import React, { useContext } from 'react'\nimport ReactDatePicker from 'react-date-picker'\nimport './date-picker.css'\nimport { Question } from '../../lib/types'\nimport { FormContext } from '../../contexts/form'\nimport moment from 'moment'\nimport { Box } from 'grommet'\n\nconst DatePicker: React.FC<{ question: Question }> = (props) => {\n  const { question } = props\n  const { values, setValue } = useContext(FormContext)\n  const value = values[question.id] as string | undefined\n\n  let v: Date | undefined\n  if (value) {\n    v = moment(value, 'YYYY-MM-DDTHH:mm:ssZ', true).toDate()\n  }\n\n  const onChange = (date: Date | Date[]) => {\n    if (!date) {\n      setValue(question, undefined)\n      return\n    }\n\n    setValue(question, moment.utc(date as Date).format('YYYY-MM-DDTHH:mm:ssZ'))\n  }\n\n  /**\n   * TODO:\n   * - Would be nice if delete moved your cursor to the previous date chunk\n   *   for example, pressing delete again after having deleted the year\n   *   should move your cursor to the end of your day value.\n   * - On mobile, the keyboard pops up. Good/bad??\n   * - On defocus, the calendar needs to hide.\n   */\n\n  return (\n    <Box style={{ maxWidth: '600px' }} pad={{ horizontal: 'large' }}>\n      <ReactDatePicker className=\"date-picker\" onChange={onChange} value={v} clearIcon={null} calendarIcon={null} />\n    </Box>\n  )\n}\n\nexport default DatePicker\n","import React, { useContext } from 'react'\nimport { Box, TextInput as GrommetTextInput } from 'grommet'\nimport { FormContext } from '../../contexts/form'\nimport { Question } from '../../lib/types'\n\ninterface Props {\n  question: Question\n}\n\nconst TextInput: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, errors } = useContext(FormContext)\n  const value = values[question.id]\n\n  const hasError = Boolean(errors[question.id])\n  return (\n    <Box pad={{ horizontal: 'large' }}>\n      <GrommetTextInput\n        className={hasError ? 'text-input errored' : 'text-input'}\n        value={(value as string) || ''}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setValue(question, e.target.value)}\n        style={{ maxWidth: '600px' }}\n      />\n    </Box>\n  )\n}\n\nexport default TextInput\n","import React, { useState } from 'react'\nimport { Select as GrommetSelect, Box, SelectProps } from 'grommet'\n\nexport const StyledSelect: React.FC<SelectProps> = (props) => {\n  const [open, setOpen] = useState(false)\n\n  return (\n    <Box style={{ maxWidth: '600px' }} className={open ? 'dropdown dropdown-open' : 'dropdown'}>\n      <GrommetSelect onOpen={() => setOpen(true)} onClose={() => setOpen(false)} {...props} />\n    </Box>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport { Box } from 'grommet'\nimport { FormContext } from '../../contexts/form'\nimport { StyledSelect } from '../helper-components/StyledSelect'\n\ninterface Props {\n  [key: string]: any\n  question: Question\n}\n\nconst Select: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, translateCopy } = useContext(FormContext)\n  const value = values[question.id]\n\n  if (!props.question) {\n    return <Box />\n  }\n\n  if (!question.options) {\n    console.error('expected question to have options')\n    return null\n  }\n\n  const options = question.options.map((option) => ({ name: translateCopy(option.name), id: option.id }))\n\n  return (\n    <Box pad={{ horizontal: 'large' }}>\n      <StyledSelect\n        a11yTitle={translateCopy(question.name)}\n        margin={{ top: 'xsmall' }}\n        options={options}\n        labelKey=\"name\"\n        valueKey={{\n          key: 'id',\n          reduce: true,\n        }}\n        value={value as string}\n        onChange={({ option }: { option: { id: string; name: string } }) => setValue(question, option.id)}\n      />\n    </Box>\n  )\n}\nexport default Select\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport { Box, RadioButtonGroup } from 'grommet'\nimport { FormContext } from '../../contexts/form'\n\ninterface Props {\n  question: Question\n  onChange?: (id: string) => void\n}\n\nconst SingleSelectRadio: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, translateCopy } = useContext(FormContext)\n\n  const value = values[question.id]\n\n  if (!question || !question.options) {\n    return <Box />\n  }\n\n  const options = question.options.map((o) => {\n    const v = `${question.id}:${o.id}`\n    return {\n      id: v,\n      value: v,\n      name: v,\n      label: translateCopy(o.name),\n    }\n  })\n\n  return (\n    <Box className=\"radio-button-group\" pad={{ horizontal: 'large' }}>\n      <RadioButtonGroup\n        name={translateCopy(question.name) || ''}\n        options={options}\n        value={`${question.id}:${value}`}\n        onChange={(e) => {\n          const id = e.target.value.split(':')[1]\n          props.onChange ? props.onChange(id) : setValue(question, id)\n        }}\n        gap=\"16px\"\n      />\n    </Box>\n  )\n}\n\nexport default SingleSelectRadio\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport SingleSelect from './SingleSelect'\nimport { FormContext } from '../../contexts/form'\n\ninterface Props {\n  [key: string]: any\n  question: Question\n  onChange: (val: string) => void\n}\n\nconst Boolean: React.FC<Props> = (props) => {\n  const { form, setValue } = useContext(FormContext)\n\n  const question = props.question\n  question.options = [\n    {\n      id: 'true',\n      name: form.instructions['yes'],\n    },\n    {\n      id: 'false',\n      name: form.instructions['no'],\n    },\n  ]\n\n  // Override the SingleSelect's onChange in order to cast the ID (string) to a boolean.\n  const onChange = (id: string) => {\n    setValue(question, id === 'true')\n  }\n\n  return <SingleSelect question={question} onChange={onChange} />\n}\n\nexport default Boolean\n","import React from 'react'\nimport { Box, BoxProps } from 'grommet'\nimport './circle-icon.css'\n\nexport interface Props {\n  color: string\n  size?: number\n}\n\nexport const CircleIcon: React.FC<Props & BoxProps & JSX.IntrinsicElements['div']> = (props) => {\n  const { color, ...otherProps } = props\n  const s = `${props.size || 20}px`\n  const b = `${(props.size || 20) / 2}px`\n\n  return (\n    <Box\n      style={{ height: s, width: s, borderRadius: b }}\n      background={{ color }}\n      flex={{ shrink: 0 }}\n      justify=\"center\"\n      align=\"center\"\n      className=\"circle-icon\"\n      margin=\"none\"\n      {...otherProps}\n    >\n      {props.children}\n    </Box>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Question, Option } from '../../lib/types'\nimport { Box, CheckBox, Paragraph } from 'grommet'\nimport { FormContext } from '../../contexts/form'\nimport { omit } from 'lodash'\nimport { CircleIcon } from '../helper-components/CircleIcon'\n\ninterface Props {\n  value: string[]\n  question: Question\n  onChange: (val: string[]) => void\n  [key: string]: any\n}\n\nconst Multiselect: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, translateCopy } = useContext(FormContext)\n  const value = values[question.id] as string[] | string\n\n  const onSelect = (option: Option) => {\n    // Handle the state of the multiselect, first.\n    const selectedOptions = value ? [...value] : []\n    const selected = !selectedOptions.includes(option.id)\n    if (selected) {\n      // Case A: User selected this option\n      selectedOptions.push(option.id)\n    } else {\n      // Case B: User deselected this option\n      selectedOptions.splice(selectedOptions.indexOf(option.id), 1)\n    }\n\n    // Now handle the additional keys\n    const additionalValues: Record<string, Record<string, Option[]> | undefined> = {}\n    for (const key of question.additionalKeys?.split(',') || []) {\n      if (!option[key]) {\n        continue\n      }\n\n      // Each entry in additionalValues maps a key (f.e. \"benefits\") to a mapping of\n      // section ID to a list of options that enabled that section.\n      additionalValues[key] = { ...(values[key] as any) }\n\n      // Based on whether we just enabled or disabled this option, add/remove this option\n      // from each of the corresponding section.\n      const sections = (option[key] as string).split(',')\n      if (selected) {\n        for (const s of sections) {\n          additionalValues[key]![s] = [...(additionalValues[key]![s] || []), option]\n        }\n      } else {\n        for (const s of sections) {\n          if (additionalValues[key]![s].length === 1) {\n            // If this option is the only option associated with this section, omit the section.\n            additionalValues[key] = omit(additionalValues[key], s)\n          } else {\n            additionalValues[key]![s] = additionalValues[key]![s].filter((o) => o.id !== option.id)\n          }\n        }\n      }\n\n      // If all sections are now hidden, omit this section group key.\n      if (Object.keys(additionalValues[key]!).length === 0) {\n        additionalValues[key] = undefined\n      }\n    }\n\n    setValue(question, selectedOptions.length > 0 ? selectedOptions : undefined, additionalValues)\n  }\n\n  if (!question || !question.options) {\n    return <Box />\n  }\n\n  return (\n    <Box pad={{ horizontal: 'large' }}>\n      {question.options.map((o) => {\n        const isSelected = Boolean(value && value.includes(o.id))\n        return (\n          <Box\n            className={isSelected ? 'checkbox checkbox-selected' : 'checkbox'}\n            key={o.id}\n            margin={{ bottom: '16px' }}\n          >\n            <CheckBox\n              checked={isSelected}\n              label={\n                <Box direction=\"row\">\n                  {o.icon && (\n                    <Box direction=\"column\" justify=\"start\" flex={{ shrink: 0 }} margin={{ right: '16px' }}>\n                      <CircleIcon color={o.icon.color} size={24}>\n                        <Paragraph\n                          fill={true}\n                          margin=\"none\"\n                          color=\"white\"\n                          style={{ fontWeight: 500, fontSize: '16px' }}\n                        >\n                          {o.icon.label}\n                        </Paragraph>\n                      </CircleIcon>\n                    </Box>\n                  )}\n                  <Paragraph margin=\"none\" fill={true}>\n                    {translateCopy(o.name)}\n                  </Paragraph>\n                </Box>\n              }\n              onChange={() => onSelect(o)}\n            />\n          </Box>\n        )\n      })}\n    </Box>\n  )\n}\n\nexport default Multiselect\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport { Box, TextArea as GrommetTextArea } from 'grommet'\nimport { FormContext } from '../../contexts/form'\n\ninterface Props {\n  question: Question\n  [key: string]: any\n}\n\nconst TextArea: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, errors } = useContext(FormContext)\n  const hasError = errors[question.id]\n\n  return (\n    <Box pad={{ horizontal: 'large' }}>\n      <GrommetTextArea\n        value={values[question.id] as string}\n        onChange={(e) => setValue(question, e.target.value)}\n        style={{ border: hasError ? '#FF4040 1px solid' : 'black 1px solid' }}\n      />\n    </Box>\n  )\n}\n\nexport default TextArea\n","import { Option } from './types'\n\nconst initialStates = [\n  { name: 'Alabama', id: 'al' },\n  { name: 'Alaska', id: 'ak' },\n  { name: 'American Samoa', id: 'as' },\n  { name: 'Arizona', id: 'az' },\n  { name: 'Arkansas', id: 'ar' },\n  { name: 'California', id: 'ca' },\n  { name: 'Colorado', id: 'co' },\n  { name: 'Connecticut', id: 'ct' },\n  { name: 'Delaware', id: 'de' },\n  { name: 'District Of Columbia', id: 'dc' },\n  { name: 'Federated States Of Micronesia', id: 'fm' },\n  { name: 'Florida', id: 'fl' },\n  { name: 'Georgia', id: 'ga' },\n  { name: 'Guam', id: 'gu' },\n  { name: 'Hawaii', id: 'hi' },\n  { name: 'Idaho', id: 'id' },\n  { name: 'Illinois', id: 'il' },\n  { name: 'Indiana', id: 'in' },\n  { name: 'Iowa', id: 'ia' },\n  { name: 'Kansas', id: 'ks' },\n  { name: 'Kentucky', id: 'ky' },\n  { name: 'Louisiana', id: 'la' },\n  { name: 'Maine', id: 'me' },\n  { name: 'Marshall Islands', id: 'mh' },\n  { name: 'Maryland', id: 'md' },\n  { name: 'Massachusetts', id: 'ma' },\n  { name: 'Michigan', id: 'mi' },\n  { name: 'Minnesota', id: 'mn' },\n  { name: 'Mississippi', id: 'ms' },\n  { name: 'Missouri', id: 'mo' },\n  { name: 'Montana', id: 'mt' },\n  { name: 'Nebraska', id: 'ne' },\n  { name: 'Nevada', id: 'nv' },\n  { name: 'New Hampshire', id: 'nh' },\n  { name: 'New Jersey', id: 'nj' },\n  { name: 'New Mexico', id: 'nm' },\n  { name: 'New York', id: 'ny' },\n  { name: 'North Carolina', id: 'nc' },\n  { name: 'North Dakota', id: 'nd' },\n  { name: 'Northern Mariana Islands', id: 'mp' },\n  { name: 'Ohio', id: 'oh' },\n  { name: 'Oklahoma', id: 'ok' },\n  { name: 'Oregon', id: 'or' },\n  { name: 'Palau', id: 'pw' },\n  { name: 'Pennsylvania', id: 'pa' },\n  { name: 'Puerto Rico', id: 'pr' },\n  { name: 'Rhode Island', id: 'ri' },\n  { name: 'South Carolina', id: 'sc' },\n  { name: 'South Dakota', id: 'sd' },\n  { name: 'Tennessee', id: 'tn' },\n  { name: 'Texas', id: 'tx' },\n  { name: 'Utah', id: 'ut' },\n  { name: 'Vermont', id: 'vt' },\n  { name: 'Virgin Islands', id: 'vi' },\n  { name: 'Virginia', id: 'va' },\n  { name: 'Washington', id: 'wa' },\n  { name: 'West Virginia', id: 'wv' },\n  { name: 'Wisconsin', id: 'wi' },\n  { name: 'Wyoming', id: 'wy' },\n]\n\nexport const states: Option[] = initialStates.map((state) => ({\n  name: {\n    en: state.name,\n    es: state.name,\n    zh: state.name,\n  },\n  id: state.id,\n}))\n","import React from 'react'\nimport { states } from '../../lib/states'\nimport Select from './Select'\nimport { Question } from '../../lib/types'\n\ninterface Props {\n  question: Question\n}\n\nconst StateSelect: React.FC<Props> = (props) => {\n  const { question } = props\n  question.options = states\n  return <Select question={question} />\n}\n\nexport default StateSelect\n","import React from 'react'\n\nconst Caret: React.FC<{ open: boolean }> = (props) => {\n  return (\n    <svg\n      transform={props.open ? 'rotate(90)' : undefined}\n      width=\"9\"\n      height=\"14\"\n      viewBox=\"0 0 9 14\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"caret\"\n    >\n      <path d=\"M1 1L7 7L1 13\" stroke=\"#333333\" strokeWidth=\"2\" />\n    </svg>\n  )\n}\n\nexport default Caret\n","import React, { useContext, useState } from 'react'\nimport { Question } from '../../lib/types'\nimport { FormContext } from '../../contexts/form'\nimport { getSections } from '../../forms'\nimport { Box, Heading, Paragraph } from 'grommet'\nimport { Markdown } from '../helper-components/Markdown'\nimport Caret from './Caret'\nimport { useKeyPress } from '../../hooks/useKeyPress'\nimport { CircleIcon } from '../helper-components/CircleIcon'\n\ninterface Props {\n  question: Question\n}\n\nconst Section: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, form, translateCopy } = useContext(FormContext)\n  const [open, setOpen] = useState<Record<string, boolean>>({})\n  const optionPressed = useKeyPress('Alt')\n\n  if (!question.sections) {\n    // A sections field should always be specified for section question types.\n    return null\n  }\n\n  const sectionGroup = getSections(question.sections, form, values)\n\n  const onToggle = (e: React.MouseEvent, id: string) => {\n    // Handle Alt-pressing, which should expand/collapse all.\n    if (!optionPressed) {\n      // Just expand/collapse this specific option.\n      setOpen({\n        ...open,\n        [id]: !open[id],\n      })\n    } else if (Object.keys(open).length > 0) {\n      // The user alt-clicked and at least one option is open, so collapse all.\n      setOpen({})\n    } else {\n      // The user alt-clicked and all options are closed, so expand all.\n      const o: Record<string, boolean> = {}\n      for (const { section } of sectionGroup) {\n        o[section.title.en] = true\n      }\n      setOpen(o)\n    }\n  }\n\n  return (\n    <Box style={{ backgroundColor: question.sections.color }} pad={{ horizontal: 'large', vertical: 'large' }}>\n      <Heading level={3} margin=\"none\">\n        {translateCopy(question.sections.name)}\n      </Heading>\n      {sectionGroup.map(({ section, options }, index) => {\n        const icons = options.filter((o) => !!o.icon).map((o) => o.icon!)\n        icons.sort((i1, i2) => i1.label.localeCompare(i2.label))\n\n        return (\n          <Box\n            background=\"#FFFFFF\"\n            style={{\n              border: '1px solid #CCCCCC',\n              borderRadius: '4px',\n              overflowWrap: 'break-word',\n              transitionDuration: '.2s',\n            }}\n            justify=\"between\"\n            key={`section_${index}`}\n            margin={{ top: 'small' }}\n            className=\"accordion\"\n            overflow=\"hidden\"\n          >\n            <Box\n              height=\"70px\"\n              direction=\"row\"\n              align=\"center\"\n              justify=\"between\"\n              onClick={(e: React.MouseEvent) => onToggle(e, section.title.en)}\n              pad={{ horizontal: '24px' }}\n              className=\"accordion-header\"\n              background={open[section.title.en] ? '#F8F8F8' : '#FFFFFF'}\n              hoverIndicator={{\n                color: '#F8F8F8',\n              }}\n            >\n              <Box>\n                <Heading margin=\"none\" level={5} style={{ color: 'black' }}>\n                  {translateCopy(section.title)}\n                </Heading>\n              </Box>\n              <Box direction=\"row\" justify=\"end\" align=\"center\" flex={{ shrink: 0 }}>\n                {icons.map((icon, i) => (\n                  <Box\n                    direction=\"column\"\n                    justify=\"center\"\n                    flex={{ shrink: 0 }}\n                    margin={{ right: i === icons.length - 1 ? '16px' : '8px' }}\n                    key={icon.label}\n                  >\n                    <CircleIcon color={icon.color} size={24}>\n                      <Paragraph fill={true} margin=\"none\" color=\"white\" style={{ fontWeight: 500, fontSize: '16px' }}>\n                        {icon.label}\n                      </Paragraph>\n                    </CircleIcon>\n                  </Box>\n                ))}\n                <Caret open={open[section.title.en]} />\n              </Box>\n            </Box>\n            <Box\n              pad={{ horizontal: '24px' }}\n              className=\"accordion-content\"\n              style={{ maxHeight: open[section.title.en] ? '500px' : '0px' }}\n            >\n              <Box pad={{ vertical: '16px' }}>\n                <Markdown size=\"small\">{translateCopy(section.content)}</Markdown>\n              </Box>\n            </Box>\n          </Box>\n        )\n      })}\n    </Box>\n  )\n}\n\nexport default Section\n","import { useState, useEffect } from 'react'\n\n// https://usehooks.com/useKeyPress/\nexport const useKeyPress = (targetKey: string) => {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false)\n\n  // If pressed key is our target key then set to true\n  function downHandler(e: KeyboardEvent) {\n    if (e.key === targetKey) {\n      setKeyPressed(true)\n    }\n  }\n\n  // If released key is our target key then set to false\n  const upHandler = (e: KeyboardEvent) => {\n    if (e.key === targetKey) {\n      setKeyPressed(false)\n    }\n  }\n\n  // Add event listeners\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler)\n    window.addEventListener('keyup', upHandler)\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler)\n      window.removeEventListener('keyup', upHandler)\n    }\n  }, []) // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed\n}\n","import React, { useContext } from 'react'\nimport { Box, TextInput as GrommetTextInput } from 'grommet'\nimport { FormContext } from '../../contexts/form'\nimport { Question } from '../../lib/types'\nimport NumberFormat, { NumberFormatProps } from 'react-number-format'\n\ninterface Props {\n  question: Question\n}\n\nexport const Number: React.FC<Props> = (props) => {\n  const { question } = props\n  const { setValue, errors } = useContext(FormContext)\n\n  const onChange: NumberFormatProps['onValueChange'] = ({ floatValue }) => {\n    setValue(question, floatValue)\n  }\n\n  let typeProps: Partial<NumberFormatProps> = {\n    type: 'tel',\n    allowNegative: false,\n  }\n  if (question.type === 'dollar-amount') {\n    typeProps = {\n      ...typeProps,\n      prefix: '$',\n      thousandSeparator: true,\n      decimalScale: 2,\n    }\n  } else if (question.type === 'integer') {\n    typeProps = {\n      ...typeProps,\n      decimalScale: 0,\n    }\n  } else if (question.type === 'decimal') {\n    typeProps = {\n      ...typeProps,\n      thousandSeparator: true,\n      decimalScale: 2,\n    }\n  } else if (question.type === 'phone') {\n    typeProps = {\n      ...typeProps,\n      decimalScale: 0,\n      format: '+1 (###) ###-####',\n      allowEmptyFormatting: true,\n      mask: '_',\n    }\n  } else if (question.type === 'ssn') {\n    typeProps = {\n      ...typeProps,\n      decimalScale: 0,\n      format: '###-##-####',\n      allowEmptyFormatting: true,\n      mask: '_',\n    }\n  }\n\n  const hasError = Boolean(errors[question.id])\n  return (\n    <Box pad={{ horizontal: 'large' }}>\n      <NumberFormat\n        className={hasError ? 'text-input errored' : 'text-input'}\n        customInput={GrommetTextInput}\n        onValueChange={onChange}\n        style={{ maxWidth: '600px' }}\n        {...typeProps}\n      />\n    </Box>\n  )\n}\n","import React, { useContext } from 'react'\nimport { Question, FileValues, FileValue } from '../../lib/types'\nimport { FormContext } from '../../contexts/form'\nimport { FormNextLink, Checkmark, FormClose } from 'grommet-icons'\nimport { useDropzone } from 'react-dropzone'\nimport { Box, Button, Paragraph, Image } from 'grommet'\nimport { encode } from 'base64-arraybuffer'\nimport './file.css'\nimport { CircleIcon } from '../helper-components/CircleIcon'\n\ninterface Props {\n  [key: string]: any\n  question: Question\n  onChange: (val: string) => void\n}\n\n/**\n * This File component is used to upload a single image or PDF file.\n * It supports drag-and-drop, file upload and image capture.\n *\n * It's built on top of:\n *  - React Dropzone: https://react-dropzone.js.org/\n *  - FileReader API: https://developer.mozilla.org/en-US/docs/Web/API/FileReader\n *\n * The contents of the uploaded file are stored as a base64-encoded binary string\n * inside of the corresponding form value. In the future, we may consider uploading to S3\n * and storing an S3 URL as a form value, but embeddeding the file inside of the\n * claim will make it easier to integrate with state backends and likely means we\n * can get something out the door sooner.\n */\nconst File: React.FC<Props> = (props) => {\n  const { question } = props\n  const { values, setValue, translateByID } = useContext(FormContext)\n  const value = values[question.id] as FileValues | undefined\n\n  const onDrop = async (acceptedFiles: File[]) => {\n    const files = await Promise.all(\n      acceptedFiles.map((file) => {\n        return new Promise<FileValue | undefined>((resolve) => {\n          const reader = new FileReader()\n\n          reader.onerror = () => {\n            resolve()\n          }\n          reader.onabort = () => {\n            resolve()\n          }\n          // onload fired only after the read operation has finished\n          reader.onload = () => {\n            resolve({\n              name: file.name,\n              type: file.type,\n              size: file.size,\n              contents: encode(reader.result as ArrayBuffer),\n            })\n          }\n          reader.readAsArrayBuffer(file)\n        })\n      })\n    )\n\n    setValue(question, [...(value || []), ...(files.filter((f) => !!f) as FileValue[])])\n  }\n\n  const { getRootProps, getInputProps, isDragActive, isFocused } = useDropzone({\n    minSize: 100, // arbitrary min > 0 (100B)\n    maxSize: 4194304, // 4MB\n    // This handler is fired both on valid and invalid files.\n    onDrop,\n    // Accept PNGs, JPGs and PDFs\n    accept: ['image/png', 'image/jpeg', 'image/jpg', 'application/pdf'],\n  })\n\n  const onRemove = () => {\n    setValue(question, undefined)\n  }\n\n  const color = isDragActive || isFocused ? '#4776F6' : '#CCCCCC'\n\n  return (\n    <>\n      <Box\n        pad=\"large\"\n        gap=\"small\"\n        alignContent=\"center\"\n        align=\"center\"\n        style={{\n          outline: `2px dashed ${color}`,\n          cursor: 'pointer',\n        }}\n        background={{\n          color: '#F6F7F9',\n        }}\n        className=\"file-upload-box\"\n        margin={{ bottom: '12px' }}\n        {...getRootProps()}\n      >\n        <input {...getInputProps()} />\n        <Paragraph margin={{ vertical: 'none' }} color=\"black\">\n          {translateByID('file-uploader-drag-drop')}\n        </Paragraph>\n        <Paragraph margin={{ vertical: 'none' }} color=\"black\">\n          {translateByID('file-uploader-or')}\n        </Paragraph>\n        <Paragraph margin={{ vertical: 'none' }} color=\"#4776F6\" style={{ display: 'flex', fontWeight: 600 }}>\n          {translateByID('file-uploader-choose-file')}\n          <CircleIcon color=\"#4776F6\" margin={{ left: '6px' }}>\n            <FormNextLink color=\"white\" className=\"file-upload-icon\" />\n          </CircleIcon>\n        </Paragraph>\n      </Box>\n      {value &&\n        value.map((v, i) => (\n          <Box direction=\"row\" pad=\"medum\" height=\"75px\" key={i} align=\"center\" justify=\"between\">\n            <Box direction=\"row\">\n              {/* TODO: use other SVGs for PDF/JPEG/etc. when those are available */}\n              <Image src=\"/file.jpg.svg\" width=\"45px\" />\n              <Paragraph margin={{ left: '12px', bottom: '12px' }}>{v.name}</Paragraph>\n            </Box>\n            <Box direction=\"row\" align=\"center\">\n              <Paragraph margin={{ vertical: 'none', right: '12px' }}>\n                {translateByID('file-uploader-uploaded')}\n              </Paragraph>\n              <CircleIcon color=\"#4776F6\">\n                <Checkmark color=\"white\" style={{ width: '12px', height: '12px' }} />\n              </CircleIcon>\n              <Button\n                icon={<FormClose />}\n                onClick={onRemove}\n                size=\"small\"\n                margin={{ left: '20px' }}\n                style={{\n                  borderRadius: '20px',\n                  padding: '3px',\n                }}\n                primary={true}\n                color=\"#eee\"\n                hoverIndicator={{\n                  color: 'lightgrey',\n                }}\n              />\n            </Box>\n          </Box>\n        ))}\n    </>\n  )\n}\n\nexport default File\n","import { Question, QuestionType, Page, Values, Errors, Form, Section, Option } from '../lib/types'\nimport DatePicker from '../components/form-components/DatePicker'\nimport TextInput from '../components/form-components/TextInput'\nimport Select from '../components/form-components/Select'\nimport SingleSelect from '../components/form-components/SingleSelect'\nimport Boolean from '../components/form-components/Boolean'\nimport Multiselect from '../components/form-components/Multiselect'\nimport TextArea from '../components/form-components/TextArea'\nimport StateSelect from '../components/form-components/StateSelect'\nimport Sections from '../components/form-components/Section'\nimport { Number as NumberComponent } from '../components/form-components/Number'\nimport File from '../components/form-components/File'\nimport { Checkbox } from '../components/form-components/Checkbox'\nimport { Box } from 'grommet'\n\n/**\n * Determines if a user can proceed to the next form, if they have:\n * 1) Finished all required questions\n * 2) There are no validation errors\n * @param page\n * @param values\n * @param errors\n */\nexport function canContinue(page: Page, values: Values, errors: Errors): boolean {\n  if (!page) {\n    return true\n  }\n\n  const questions = getFlattenedQuestions(page.questions, values)\n  const questionIds = questions.map((q) => q.id)\n  const requiredQuestions = questions.filter((q) => q.required).map((q) => q.id)\n  return requiredQuestions.every((id) => values[id] !== undefined) && !questionIds.some((id) => errors[id])\n}\n\n/**\n * Given a set of questions, generates a flattened list of 'relevant' questions, including subquestions from switches.\n * @param questions\n * @param values\n */\nexport function getFlattenedQuestions(questions: Question[], values: Values): Question[] {\n  const flattenedQuestions: Question[] = []\n\n  for (const question of questions) {\n    flattenedQuestions.push(question)\n    const { id } = question\n\n    const value = values[id] as string\n    const hasSubQuestions = value !== undefined && question.switch && getSwitch(question.switch, value)\n\n    if (hasSubQuestions) {\n      const subQuestions = getSwitch(question.switch, value)\n      flattenedQuestions.push(...getFlattenedQuestions(subQuestions, values))\n    }\n  }\n\n  return flattenedQuestions\n}\n\nconst typeComponentMappings: Partial<Record<QuestionType, React.FC>> = {\n  shorttext: TextInput as React.FC,\n  date: DatePicker as React.FC,\n  dropdown: Select as React.FC,\n  'single-select': SingleSelect as React.FC,\n  boolean: Boolean as React.FC,\n  multiselect: Multiselect as React.FC,\n  longtext: TextArea as React.FC,\n  'instructions-only': Box,\n  'state-picker': StateSelect as React.FC,\n  decimal: NumberComponent as React.FC,\n  integer: NumberComponent as React.FC,\n  'dollar-amount': NumberComponent as React.FC,\n  phone: NumberComponent as React.FC,\n  ssn: NumberComponent as React.FC,\n  file: File as React.FC,\n  checkbox: Checkbox as React.FC,\n  sections: Sections as React.FC,\n}\n\nexport function getComponent(type: QuestionType): React.FC<{ question: Question }> {\n  return typeComponentMappings[type] || TextInput\n}\n\nexport function getSwitch(questionSwitch: Question['switch'], value: string | string[]): Question[] {\n  if (!questionSwitch || value === undefined) {\n    return []\n  }\n  const switchKeys = Object.keys(questionSwitch).filter((key) => {\n    return (\n      key.split(',').includes(value.toString()) ||\n      (Array.isArray(value) && (value as string[]).some((val) => key.split(',').includes(val)))\n    )\n  })\n\n  if (switchKeys.length === 0) {\n    return []\n  }\n\n  // In case this is a multiselect, always choose the last switch.\n  const switchKey = switchKeys[switchKeys.length - 1]\n\n  // NOTE: we inline definitions in transformInlineDefinitions above, so it'll always be Question[].\n  return questionSwitch[switchKey] as Question[]\n}\n\nexport function getSections(\n  sectionIds: Question['sections'],\n  form: Form,\n  values: Values\n): Array<{ section: Section; options: Option[] }> {\n  const { sections } = form\n  if (!sections || !sectionIds) {\n    return []\n  }\n\n  const out: Array<{ section: Section; options: Option[] }> = []\n  if (sectionIds.include) {\n    out.push(\n      ...sectionIds.include.map((id) => ({\n        section: sections[id],\n        // TODO: how to represent the option that triggered this?\n        options: [],\n      }))\n    )\n  }\n  if (sectionIds.id) {\n    const s = (values[sectionIds.id] as Record<string, Option[]>) || {}\n    out.push(\n      ...Object.entries(s).map(([id, options]) => ({\n        section: sections[id],\n        options: options,\n      }))\n    )\n  }\n\n  return out\n}\n","import React, { useContext } from 'react'\nimport { Question } from '../../lib/types'\nimport { CheckBox as GrommetCheckBox, Paragraph, Box } from 'grommet'\nimport { FormContext } from '../../contexts/form'\nimport classnames from 'classnames'\n\ninterface Props {\n  question: Question\n}\n\nexport const Checkbox: React.FC<Props> = (props) => {\n  const { question, ...rest } = props\n  const { values, setValue, translateCopy, errors } = useContext(FormContext)\n\n  const value = values[question.id]\n  const hasError = Boolean(errors[question.id])\n\n  return (\n    <Box\n      className={classnames('checkbox', {\n        'checkbox-selected': !!value,\n        errored: hasError,\n      })}\n      margin=\"none\"\n      pad={{ horizontal: 'large' }}\n    >\n      <GrommetCheckBox\n        checked={value === true}\n        label={<Paragraph margin=\"none\">{translateCopy(question.options![0].name)}</Paragraph>}\n        onChange={() => setValue(question, !value)}\n        {...rest}\n      />\n    </Box>\n  )\n}\n","import { Question, Copy, Form, Values, Value } from './types'\nimport validator from 'email-validator'\nimport Joi from '@hapi/joi'\nimport moment from 'moment'\nimport { states } from './states'\n\nfunction getInstructions(form: Form, id: string): Copy {\n  const c = form.instructions[id]\n  if (!c) {\n    throw new Error(`Unknown instructions id: ${id}`)\n  }\n  return c\n}\n\nexport function isQuestionValid(\n  question: Question,\n  value: Value,\n  values: Values,\n  form: Form\n): { errors: Copy[]; dependencies: string[] } {\n  const errors: Copy[] = []\n\n  // Handle required-field checks.\n  if (value === undefined) {\n    if (question.required) {\n      errors.push(getInstructions(form, 'field-is-required'))\n      return { errors, dependencies: [] }\n    } else {\n      // If the question is not required and not set,\n      // go ahead and exit early so we don't surface unnecessary errors.\n      return { errors: [], dependencies: [] }\n    }\n  }\n\n  function validate<T>(schema: Joi.Schema, value: any, copyID: string): value is T {\n    const { error } = schema.strict().options({ presence: 'required' }).validate(value)\n    if (error) {\n      errors.push(getInstructions(form, copyID!))\n      if (process.env.NODE_ENV === 'development') {\n        console.error(error)\n      }\n    }\n    return !error\n  }\n\n  // Handle type-specified validation, which is generic\n  // to the question itself.\n  switch (question.type) {\n    case 'email':\n      if (validate<string>(Joi.string(), value, 'invalid-email')) {\n        if (!validator.validate(value)) {\n          errors.push(getInstructions(form, 'invalid-email'))\n        }\n      }\n      break\n    case 'decimal':\n      validate(Joi.number().precision(2).min(0).max(2147483647), value, 'invalid-decimal')\n      break\n    case 'integer':\n      validate(Joi.number().precision(0).min(0).max(2147483647), value, 'invalid-integer')\n      break\n    case 'dollar-amount':\n      validate(Joi.number().precision(2).min(0).max(2147483647), value, 'invalid-dollar')\n      break\n    case 'shorttext':\n    case 'longtext':\n      validate(\n        Joi.string()\n          .allow(...(question.required ? [] : ['']))\n          .max(question.type === 'shorttext' ? 200 : 10000),\n        value,\n        'invalid-text'\n      )\n      break\n    case 'date':\n      // We should be able to replicate this with joi-date, but I didn't have much\n      // luck with that. Kept hitting undocumented issues with the format function.\n      validate(\n        Joi.string().custom((v: string, helpers) => {\n          const strict = true\n          return moment(v, 'YYYY-MM-DDTHH:mm:ssZ', strict).isValid() ? v : helpers.error('any.invalid')\n        }),\n        value,\n        'invalid-date'\n      )\n      break\n    case 'dropdown':\n    case 'single-select':\n    case 'state-picker':\n      if (validate<string>(Joi.string(), value, 'invalid-select')) {\n        const options = question.type === 'state-picker' ? states : question.options\n        // Check if we selected a pre-defined option id:\n        if (!options?.find((o) => o.id === value)) {\n          errors.push(getInstructions(form, 'invalid-select'))\n        }\n      }\n      break\n    case 'multiselect':\n      if (validate<string[]>(Joi.array().items(Joi.string()), value, 'invalid-select')) {\n        const invalid = value.some((v) => {\n          return !question.options?.find((o) => o.id === v)\n        })\n        if (invalid) {\n          errors.push(getInstructions(form, 'invalid-select'))\n        }\n      }\n      break\n    case 'boolean':\n      validate(Joi.boolean(), value, 'invalid-boolean')\n      break\n    case 'phone':\n      validate(Joi.number().precision(0).min(1000000000).max(9999999999), value, 'invalid-phone')\n      break\n    case 'ssn':\n      validate(Joi.number().precision(0).min(100000000).max(999999999), value, 'invalid-ssn')\n      break\n    case 'arn':\n      validate(Joi.string().regex(/^A[0-9]{7,9}$/), value, 'invalid-arn')\n      break\n    case 'address':\n      // TODO: we should do more validation than this for address, but this depends on the new\n      // UI for entering addresses.\n      validate(Joi.string(), value, 'invalid-address')\n      break\n    case 'instructions-only':\n      // There should not be an answer for this question.\n      errors.push(getInstructions(form, 'invalid-instructions-only'))\n      break\n    case 'file':\n      validate(\n        Joi.array()\n          .min(question.required ? 1 : 0)\n          .max(10)\n          .items(\n            Joi.object({\n              name: Joi.string().optional(),\n              type: Joi.string().valid('image/png', 'image/jpeg', 'image/jpg', 'application/pdf'),\n              size: Joi.number().min(0),\n              contents: Joi.string().min(1),\n            })\n          ),\n        value,\n        'invalid-file'\n      )\n      break\n    case 'checkbox':\n      if (value !== true) {\n        errors.push(getInstructions(form, 'invalid-checkbox'))\n      }\n  }\n\n  // Handle question-specific validation, as specified in the form.\n  const dependencies: string[] = []\n  question.validate?.forEach((validation) => {\n    const { type, value: validationValue, error } = validation\n\n    if (typeof validationValue === 'string' && validationValue.startsWith('id:')) {\n      // If this validation depends on another question, then we'll need to\n      // reevaluate the error state of that field. We track that with dependencies\n      // and the caller of this function is responsible for handling that.\n      dependencies.push(validationValue.slice(3))\n    }\n\n    let isValid\n    if (type === 'regex') {\n      const regex = new RegExp(validationValue as string)\n      isValid = typeof value === 'string' && regex.test(value)\n    } else if (type === 'matches_field') {\n      const id = validationValue.slice(3)\n      isValid = value === values[id]\n    } else if (type === 'min' || type === 'max') {\n      if (question.type === 'date') {\n        const d = moment(value as string, moment.ISO_8601)\n        if (validationValue.startsWith('id:')) {\n          // Compare this date to the corresponding date based on the supplied id.\n          const id = validationValue.slice(3)\n          const other = values[id]\n          if (other === undefined) {\n            // If we haven't specified the other date yet, don't consider that an error.\n            isValid = true\n          } else {\n            const od = moment(other as string, moment.ISO_8601)\n            isValid = type === 'min' ? d.isSameOrAfter(od) : d.isSameOrBefore(od)\n          }\n        } else {\n          // Compare this date to the relative date specified (f.e. \"-14y\").\n          const unit = validationValue[validationValue.length - 1] as 'y' | 'd'\n          const n = Number(validationValue.slice(0, validationValue.length - 1))\n          const p = moment().add(n, unit)\n          isValid = type === 'min' ? d >= p : d <= p\n        }\n      }\n    }\n\n    if (!isValid) {\n      errors.push(error)\n    }\n  })\n\n  return { errors, dependencies }\n}\n","import { Form, Question } from './types'\n\nexport function transformInlineDefinitions(form: Form): Form {\n  if (!form.definitions) {\n    return form\n  }\n\n  const transformInlineDefinitionsQuestions = (questions: Question[]): Question[] => {\n    for (let qi = 0; qi < questions.length; qi++) {\n      const question = questions[qi]\n      if (question.switch) {\n        for (const switchKey of Object.keys(question.switch)) {\n          const oldSwitch = question.switch[switchKey]\n          const newSwitch: Question[] = []\n          for (let si = 0; si < oldSwitch.length; si++) {\n            const value = oldSwitch[si]\n            if (typeof value === 'string' && value.startsWith('definition:')) {\n              const definitionID = value.replace(/^definition:/, '')\n              const definition = form.definitions![definitionID]\n              if (!definition) {\n                console.error(`Unknown question set definition: ${definitionID}`)\n                continue\n              }\n              newSwitch.push(...transformInlineDefinitionsQuestions(definition))\n            } else {\n              newSwitch.push(...transformInlineDefinitionsQuestions([value as Question]))\n            }\n          }\n          questions[qi].switch![switchKey] = newSwitch\n        }\n      }\n    }\n\n    return questions\n  }\n\n  for (let pi = 0; pi < form.pages.length; pi++) {\n    form.pages[pi].questions = transformInlineDefinitionsQuestions(form.pages[pi].questions)\n  }\n\n  return form\n}\n","import React, { createContext, useContext, useState, useEffect, useCallback } from 'react'\nimport formSchema from '../form.schema.json'\nimport { Question, Copy, Form, Value, Values, Errors } from '../lib/types'\nimport { canContinue } from '../forms'\nimport { Box } from 'grommet'\nimport { omit, get } from 'lodash'\nimport { Spinner, Markdown, Card } from '../components/helper-components'\nimport { LanguageContext } from './language'\nimport ky from 'ky'\nimport yaml from 'js-yaml'\nimport Ajv from 'ajv'\nimport { getFlattenedQuestions } from '../forms/index'\nimport { isQuestionValid } from '../lib/validation'\nimport { transformInlineDefinitions } from '../lib/inline'\nimport amplitude from 'amplitude-js'\n\nexport interface FormState {\n  form: Form\n  setValue: (question: Question, value: Value, additionalValues?: Record<string, Value>) => void\n  setError: (id: string, value: Copy[]) => void\n  values: Values\n  errors: Errors\n  translateCopy: <C extends Copy | undefined>(\n    copy: C,\n    variables?: Record<string, string>\n  ) => C extends Copy ? string : string | undefined\n  translateByID: (id: string, variables?: Record<string, string>) => string\n  completion: Record<string, boolean>\n  pageIndex: number\n  setPage: (index: number) => void\n}\n\nconst initialState = {\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  /* eslint-disable @typescript-eslint/no-empty-function */\n  form: undefined,\n  values: {},\n  errors: {},\n  setValue: (question: Question, value: Value, additionalValues?: Record<string, Value>) => {},\n  setError: (id: string, value: Copy[]) => {},\n}\n\nexport const FormContext = createContext<FormState>(initialState as any)\n\ntype FormError = {\n  message: string\n  error?: any\n}\n\nexport const FormProvider: React.FC = (props) => {\n  const [form, setForm] = useState<Form | undefined>(initialState.form)\n  const [values, setValues] = useState<Values>(initialState.values)\n  const [errors, setErrors] = useState<Errors>(initialState.errors)\n  const [completion, setCompletion] = useState<Record<string, boolean>>({})\n  const [pageIndex, setPageIndex] = useState<number>(0)\n  const [formValidationError, setFormValidationError] = useState<FormError | undefined>()\n  const { language } = useContext(LanguageContext)\n\n  useEffect(() => {\n    const effect = async () => {\n      // Load the form.yaml\n      //\n      // TODO: experiment with nextjs to see if we can embed this file instead\n      // of fetching it. This'll speed up page load. Next would allow us to\n      // get the benefits of ejecting CRA without ejecting.\n      const [form, formSample] = await Promise.all([ky.get('form.yml').text(), ky.get('form.sample.yml').text()])\n\n      let contents, sampleContents\n      try {\n        // Parse the YAML -> JSON\n        contents = yaml.safeLoad(form, {\n          json: true,\n        })\n        sampleContents = yaml.safeLoad(formSample, {\n          json: true,\n        })\n      } catch (err) {\n        setFormValidationError({\n          message: 'Failed to parse YAML form',\n          error: err,\n        })\n        return\n      }\n\n      // States will build their own form in `form.yml` from the example in `form.sample.yml`.\n      // By default, we'll use the sample version until a state starts building their form in\n      // `form.yml`.\n      const useSample = contents === null\n      let rawForm = useSample ? sampleContents : contents\n\n      // During local development, we validate the form structure against\n      // our JSON Schema and render any errors.\n      if (process.env.NODE_ENV === 'development') {\n        const ajv = new Ajv({\n          allErrors: true,\n        })\n        const validator = ajv.compile(formSchema)\n        validator(rawForm)\n        if (validator.errors) {\n          console.error(validator.errors)\n          const errors = validator.errors.filter(({ dataPath, message }) => {\n            // Filter out error messages about the default (empty) form.yml schema.\n            return !(\n              dataPath === '' &&\n              message &&\n              ['should be string,null', 'should match exactly one schema in oneOf'].includes(message)\n            )\n          })\n          setFormValidationError({\n            message: `${useSample ? 'form.sample.yml' : 'form.yml'} failed validation\\n${errors.map(\n              (d) => `\\n  - ${d.dataPath} ${d.message}`\n            )}`,\n          })\n        }\n      }\n\n      // Inline any top-level quesiton set definitions:\n      rawForm = transformInlineDefinitions(rawForm)\n\n      setForm(rawForm)\n    }\n\n    effect().catch((err) => {\n      console.error(err)\n    })\n  }, [])\n\n  const setError = (key: string, value: Copy[]) => setErrors({ ...errors, [key]: value })\n  const setValue = (question: Question, value: Value, additionalValues?: Record<string, Value>) => {\n    console.log('[Google Analytics] sending event: Answer Updated')\n    gtag('event', 'Answer Updated', {\n      id: question.id,\n      value,\n    })\n    amplitude.getInstance().logEvent('Answer Updated', {\n      id: question.id,\n      value,\n    })\n\n    // Insert the new value, plus additionaValues, into values and remove any fields\n    // that would now map to `undefined`.\n    let newValues = { ...values, [question.id]: value, ...(additionalValues || {}) }\n    if (value === undefined) {\n      newValues = omit(newValues, question.id)\n    }\n    newValues = omit(\n      newValues,\n      Object.keys(additionalValues || {}).filter((k) => additionalValues![k] === undefined)\n    )\n    setValues(newValues)\n\n    if (process.env.NODE_ENV === 'development') {\n      console.log('Form values: ', newValues)\n    }\n\n    const { errors: validationErrors, dependencies } = isQuestionValid(question, value, values, form!)\n    let newErrors =\n      validationErrors.length > 0 ? { ...errors, [question.id]: validationErrors } : omit(errors, question.id)\n    // Note: we only support question references within the same page. That's probably good enough,\n    // but we could expand this in the future if needed.\n    const page = form!.pages[pageIndex]\n    for (const dep of dependencies) {\n      if (values[dep] !== undefined) {\n        const q = getFlattenedQuestions(page.questions, values).find((q) => q.id === dep)!\n        // Note: we ignore deps here. We could recursively traverse them if we want, but we'll need\n        // to avoid cycles. So we just handle a single level of depth (which should be good enough) for now.\n        const { errors: depErrors } = isQuestionValid(q, values[dep], newValues, form!)\n        newErrors = depErrors.length > 0 ? { ...newErrors, [q.id]: depErrors } : omit(newErrors, q.id)\n      }\n    }\n    setErrors(newErrors)\n\n    const canContinueFromPage = canContinue(page, newValues, newErrors)\n    setCompletion({\n      ...completion,\n      [pageIndex]: canContinueFromPage,\n    })\n  }\n\n  const translateCopy = useCallback(\n    (copy, variables) => {\n      if (!copy) {\n        return undefined\n      }\n\n      let text = copy[language]\n\n      // Apply templating variables by looking for `{{VARIABLE_NAME}}` fields.\n      // The value is evaluated as the first truthy value of:\n      //  1. If the key starts with `id:`, then the remainder of the key is considered a question ID\n      //     and the corresponding value from the current set of form values is used.\n      //  2. If a matching key is supplied in the `variables` argument to `translateCopy`.\n      //  3. If a matching key exists in the form's top-level variables map.\n      //  4. If nothing else, then the variable is left as-is (f.e.: {{VARIABLE_NAME}}).\n      text = text.replace(/\\{\\{([a-ziA-Z0-9._:-]+)\\}\\}/g, (m, key) => {\n        // `key` is the regex-captured value inside the curly braces:\n        let value = get(variables || form?.variables, key)\n        if (key.startsWith('id:')) {\n          const questionID = key.slice(3)\n          value = values[questionID] ? String(values[questionID]) : value\n        }\n        // If we don't recognize this variable, then default to rendering\n        // all of `{{VARIABLE_NAME}}` since that'll make the issue clearest.\n        return value ? value : m\n      })\n\n      return text\n    },\n    [form, language, values]\n  ) as FormState['translateCopy']\n\n  const translateByID = (id: string, variables?: Record<string, string>): string => {\n    return translateCopy(form!.instructions[id], variables)\n  }\n\n  const setPage = (index: number) => {\n    setPageIndex(index)\n    window.scrollTo(0, 0)\n  }\n\n  /**\n   * This hook is purely for testing, where it'll prefill form values so we can test\n   * functionality later on in the form.\n   */\n  // const [prefilled, setPrefilled] = useState(false)\n  // useEffect(() => {\n  //   if (prefilled || !form || process.env.NODE_ENV !== 'development') return\n\n  //   // Initialize form with some starter values for testing.\n  //   // Note Number values won't render, but the value is there.\n  //   const testValues: Record<string, [Value] | [Value, Record<string, Value>]> = {\n  //     /* eslint-disable @typescript-eslint/camelcase */\n  //     agreement: [true],\n  //     employed_in_new_jersey: ['laid-off-in-new-jersey'],\n  //     'relationship-to-employer': ['receiving-partial-unemployment'],\n  //   }\n  //   for (const [id, v] of Object.entries(testValues)) {\n  //     const [value, additionalValues] = v\n  //     const vv = values[id]\n  //     if (vv === value || (Array.isArray(value) && Array.isArray(vv) && value.length === vv.length)) {\n  //       continue\n  //     }\n\n  //     for (const [i, page] of form.pages.entries()) {\n  //       for (const question of getFlattenedQuestions(page.questions, values)) {\n  //         if (question.id === id) {\n  //           if (i !== pageIndex) {\n  //             setPageIndex(i)\n  //             // 1337 hacks\n  //             return\n  //           }\n\n  //           setValue(question, value, additionalValues)\n  //           // 1337 hacks\n  //           return\n  //         }\n  //       }\n  //     }\n  //   }\n\n  //   // now that we've prefilled the values, stop overwriting them with the initial values.\n  //   setPrefilled(true)\n  // })\n\n  useEffect(() => {\n    if (form) {\n      // Update the page title\n      document.title = translateCopy(form.title)\n\n      // Upsert the page description\n      let description = document.querySelector('meta[name=\"description\"]')\n      if (!description) {\n        description = document.createElement('meta')\n        description.setAttribute('name', 'description')\n        document.head.appendChild(description)\n      }\n      description.setAttribute('content', translateCopy(form.description))\n    }\n  }, [form, translateCopy])\n\n  if (formValidationError) {\n    const content = `\n## ⚠️ Form Parsing Error\n\n${formValidationError.message}\n\n${formValidationError.error ? '```' + JSON.stringify(formValidationError.error, null, 2) + '```' : ''}`\n\n    return (\n      <Card\n        margin={{ vertical: 'medium', horizontal: 'auto' }}\n        pad={{ horizontal: 'medium', vertical: 'small' }}\n        width={{ max: '800px' }}\n      >\n        <Box pad=\"medium\">\n          <Markdown>{content}</Markdown>\n        </Box>\n      </Card>\n    )\n  }\n\n  if (!form) {\n    return (\n      <Box pad=\"medium\">\n        <Spinner />\n      </Box>\n    )\n  }\n\n  const value: FormState = {\n    form,\n    values,\n    setValue,\n    errors,\n    setError,\n    translateCopy,\n    translateByID,\n    completion,\n    pageIndex,\n    setPage,\n  }\n\n  return <FormContext.Provider value={value}>{props.children}</FormContext.Provider>\n}\n","import React, { useContext } from 'react'\nimport { Card } from './helper-components'\nimport { Box, Text, Image, ResponsiveContext, Heading, Paragraph } from 'grommet'\nimport { LanguageContext } from '../contexts/language'\nimport { FormContext } from '../contexts/form'\nimport { range } from 'lodash'\nimport { Markdown } from './helper-components/Markdown'\nimport { StyledSelect } from './helper-components/StyledSelect'\nimport amplitude from 'amplitude-js'\n\ninterface Props {\n  pages: string[]\n}\n\nconst languages = [\n  { title: 'English', value: 'en' },\n  // NJ isn't using Chinese language translations\n  // { title: '中文', value: 'zh' },\n  { title: 'Español', value: 'es' },\n]\n\nconst Sidebar: React.FC<Props> = (props) => {\n  const { pages } = props\n  const { translateByID, form, pageIndex, setPage, completion } = useContext(FormContext)\n  const { language, setLanguage } = useContext(LanguageContext)\n  const size = useContext(ResponsiveContext)\n\n  const currentPage = pages[pageIndex]\n  const maxCompletedPage = range(0, form.pages.length)\n    .map<number>((i) => (completion[i] ? 1 : 0))\n    .reduce((i, j) => i + j, 0)\n  const percent = Math.floor((maxCompletedPage / pages.length) * 100)\n\n  const canClickPage = (i: number) => {\n    return range(0, i).every((index) => completion[index])\n  }\n\n  const onChangeLanguage = ({ value }: any) => {\n    console.log('[Google Analytics] sending event: Change Language')\n    gtag('event', 'Change Language', {\n      prevLanguage: language,\n      newLanguage: value,\n    })\n    amplitude.getInstance().logEvent('Change Language', {\n      prevLanguage: language,\n      newLanguage: value,\n    })\n\n    setLanguage(value)\n  }\n\n  return (\n    <Box\n      flex={{ shrink: 0 }}\n      margin={size === 'small' ? { top: 'small' } : { left: 'small' }}\n      direction=\"column\"\n      width={size === 'small' ? '100%' : '350px'}\n    >\n      <Card margin={{ bottom: 'small' }} pad={{ horizontal: size === 'small' ? '24px' : 'medium', vertical: 'small' }}>\n        <Markdown>{translateByID('demo-warning')}</Markdown>\n      </Card>\n      <Card pad=\"medium\">\n        {form.seal && (\n          <Box margin={{ bottom: 'medium' }}>\n            <Image src={form.seal} style={{ maxHeight: '175px', maxWidth: '100%', objectFit: 'contain' }} />\n          </Box>\n        )}\n        <Box>\n          <Heading level={4} margin=\"none\">\n            {translateByID('language')}\n          </Heading>\n          <StyledSelect\n            a11yTitle=\"select language\"\n            margin={{ top: 'xsmall' }}\n            options={languages}\n            labelKey=\"title\"\n            valueKey={{ key: 'value', reduce: true }}\n            value={language}\n            onChange={onChangeLanguage}\n          />\n        </Box>\n        <Box margin={{ top: 'medium' }}>\n          <Box direction=\"row\" justify=\"between\">\n            <Heading level={4} margin=\"none\">\n              {translateByID('progress')}\n            </Heading>\n            <Paragraph margin=\"none\">{percent}%</Paragraph>\n          </Box>\n          <Box\n            margin={{ top: 'xsmall' }}\n            style={{ width: '100%', height: '12px', borderRadius: '12px', background: '#F2F2F2' }}\n          >\n            <Box style={{ width: `${percent}%`, height: '100%', borderRadius: '12px', background: '#3A80C2' }} />\n          </Box>\n        </Box>\n        <Box margin={{ top: 'medium' }}>\n          {size === 'small' && pages.length > 2 ? (\n            <>\n              {/* On small screens, we collapse the section titles to a Select */}\n              <Heading level={4} margin=\"none\">\n                {translateByID('section')}\n              </Heading>\n              <StyledSelect\n                a11yTitle=\"select section\"\n                margin={{ top: 'xsmall' }}\n                options={pages.map((page, i) => ({ page, i, disabled: !canClickPage(i) }))}\n                labelKey=\"page\"\n                valueKey={{ key: 'i', reduce: true }}\n                disabledKey=\"disabled\"\n                value={pageIndex as any} /* These type definitions don't support values as numbers */\n                // TODO: In production, add a `canClickPage(i) && ` below to prevent folks from jumping forward.\n                onChange={({ value: i }) => setPage(i)}\n              />\n            </>\n          ) : (\n            /* On larger screens, we show all section titles as a list */\n            pages.map((page, i) => {\n              return (\n                <Text\n                  style={{\n                    cursor: canClickPage(i) ? 'pointer' : 'not-allowed',\n                    opacity: currentPage === page ? '100%' : canClickPage(i) ? '50%' : '20%',\n                  }}\n                  // TODO: In production, add a `canClickPage(i) && ` below to prevent folks from jumping forward.\n                  onClick={() => canClickPage(i) && setPage(i)}\n                  margin={{ bottom: 'xsmall' }}\n                  key={page}\n                >\n                  {page}\n                </Text>\n              )\n            })\n          )}\n        </Box>\n      </Card>\n    </Box>\n  )\n}\n\nexport default Sidebar\n","import React, { useContext, useEffect } from 'react'\nimport { Question as QuestionInterface } from '../lib/types'\nimport { getComponent, getSwitch, getSections } from '../forms'\nimport { Box, Heading, Text } from 'grommet'\nimport { FormContext } from '../contexts/form'\nimport { Markdown } from './helper-components'\n\ninterface Props {\n  question: QuestionInterface\n}\n\nconst Question: React.FC<Props> = (props) => {\n  const { question } = props\n  const Component = getComponent(question.type)\n\n  const { values, errors, form, translateCopy, translateByID } = useContext(FormContext)\n\n  const value = values[question.id]\n  const error = errors[question.id]\n  let switchComponent: HTMLDivElement | null\n\n  useEffect(() => {\n    if (value && form.variables?.autoscroll) {\n      switchComponent?.scrollIntoView({ behavior: 'smooth' })\n    }\n  }, [value])\n\n  // If question is \"sections\" but there are no sections, don't render.\n  if (question.type === 'sections' && getSections(question.sections, form, values).length === 0) {\n    return <Box />\n  }\n\n  return (\n    <Box direction=\"column\" margin={{ top: question.type === 'sections' ? 'none' : '48px' }}>\n      {(question.name || question.instructions) && (\n        <Box fill={true} className=\"question-heading-box\" pad={{ horizontal: 'large' }} margin={{ bottom: '16px' }}>\n          {question.name && (\n            <Box direction=\"row\" align=\"start\">\n              <Heading\n                style={{\n                  maxWidth: 'none',\n                }}\n                level={4}\n                margin={{ horizontal: 'none', top: 'none', bottom: question.instructions ? '8px' : 'none' }}\n              >\n                {translateCopy(question.name)}\n                {!question.required && !['instructions-only', 'sections'].includes(question.type) && (\n                  <em> ({translateByID('optional')})</em>\n                )}\n              </Heading>\n            </Box>\n          )}\n          {question.instructions && <Markdown size=\"small\">{translateCopy(question.instructions)}</Markdown>}\n        </Box>\n      )}\n\n      <Component question={question} />\n      {error && (\n        <Box pad={{ horizontal: 'large' }}>\n          {error.map((e) => (\n            <Text key={e.en} margin={{ top: 'xsmall' }} color=\"#E42906\">\n              {translateCopy(e)}\n            </Text>\n          ))}\n        </Box>\n      )}\n      <Box ref={(el) => (switchComponent = el)}>\n        {question.switch &&\n          getSwitch(question.switch, value as string | string[])?.map((q) => <Question question={q} key={q.id} />)}\n      </Box>\n    </Box>\n  )\n}\n\nexport default Question\n","import React, { ReactNode } from 'react'\nimport { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer'\nimport { Form, Values, Question, Option } from '../lib/types'\nimport { getSections, getFlattenedQuestions } from '../forms'\nimport { FormState } from '../contexts/form'\nimport removeMarkdown from 'remove-markdown'\nimport moment from 'moment'\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n  },\n  pageContent: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n  },\n  heading: {\n    fontSize: 20,\n    fontWeight: 500,\n    marginBottom: 8,\n  },\n  questionTitle: {\n    fontSize: 16,\n    fontWeight: 500,\n    marginBottom: 8,\n  },\n  questionAnswer: {\n    fontSize: 12,\n  },\n  section: {\n    padding: 12,\n    border: '1px solid black',\n    backgroundColor: '#F8F8F8',\n    marginBottom: 12,\n  },\n  sectionTitle: {\n    fontSize: 12,\n    marginBottom: 8,\n    fontWeight: 'bold',\n  },\n  sectionContent: { fontSize: 10 },\n  questionSection: {\n    paddingTop: 12,\n    borderTop: '1px solid black',\n  },\n})\n\nconst linkRegex = /\\[([^[]+)\\](\\(.*\\))/gm\nfunction processLinks(content: string) {\n  if (!content) {\n    return content\n  }\n\n  return content.replace(linkRegex, (match, p1, p2) => {\n    return `${p1}: ${p2.replace(/[{()}]/g, '')}`\n  })\n}\n\ninterface Props {\n  form: Form\n  values: Values\n  translateCopy: FormState['translateCopy']\n}\n\nconst Icon: React.FC<{ option: Option }> = ({ option }) => {\n  return (\n    <View\n      key={option.id}\n      style={{\n        marginRight: 8,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: option.icon ? option.icon.color : 'grey',\n        height: 20,\n        width: 20,\n        borderRadius: 10,\n      }}\n    >\n      <Text style={{ fontSize: 12 }}>{option.icon?.label}</Text>\n    </View>\n  )\n}\n\nconst PDF: React.FC<Props> = (props) => {\n  const { translateCopy, form, values } = props\n  let questions: Question[] = []\n\n  form.pages.forEach((p) => {\n    questions = questions.concat(getFlattenedQuestions(p.questions, values))\n  })\n\n  function getValue(question: Question, values: Values): string | ReactNode {\n    if (question.type === 'multiselect' && values[question.id]) {\n      const multiselectAnswers = (values[question.id] as string[]).map((optionId) => {\n        const option = question.options!.find((o) => o.id === optionId)\n        if (!option) {\n          return <View />\n        }\n        if (!option.icon) {\n          return `\\n• ${removeMarkdown(translateCopy(option.name))}`\n        }\n        return (\n          <View\n            style={{ alignItems: 'flex-start', marginBottom: 8, display: 'flex', flexDirection: 'row' }}\n            key={question.id}\n          >\n            <Icon option={option} />\n            <Text style={{ fontSize: 12, width: '90%' }}>{removeMarkdown(translateCopy(option.name))}</Text>\n          </View>\n        )\n      })\n      return <View>{multiselectAnswers}</View>\n    }\n    if (question.type === 'single-select') {\n      const option = question.options!.find((o) => o.id === values[question.id])\n      if (option) {\n        return <Text style={styles.questionAnswer}>{removeMarkdown(translateCopy(option.name))}</Text>\n      }\n    }\n    if (question.type === 'checkbox') {\n      return <Text style={styles.questionAnswer}>{removeMarkdown(translateCopy(question.options![0].name))}</Text>\n    }\n    if (question.type === 'sections') {\n      return (\n        <View>\n          {getSections(question.sections, form, values).map(({ section, options }, i) => (\n            <View style={styles.section} key={`${translateCopy(section.title)}_${i}`}>\n              <View\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  justifyContent: 'space-between',\n                  alignItems: 'flex-start',\n                  marginBottom: 12,\n                }}\n              >\n                <Text\n                  style={{\n                    fontSize: 12,\n                    marginBottom: 8,\n                    fontWeight: 'bold',\n                  }}\n                >\n                  {translateCopy(section.title)}\n                </Text>\n                <View style={{ display: 'flex', flexDirection: 'row' }}>\n                  {options.map((o) => (\n                    <Icon key={o.id} option={o} />\n                  ))}\n                </View>\n              </View>\n              <Text style={styles.sectionContent}>{removeMarkdown(processLinks(translateCopy(section.content)))}</Text>\n            </View>\n          ))}\n        </View>\n      )\n    }\n\n    return <View />\n  }\n\n  return (\n    <Document>\n      <Page size=\"A4\" style={styles.page}>\n        <View style={styles.pageContent}>\n          <Text style={styles.heading}>{translateCopy(form.title)}</Text>\n          <Text style={{ fontSize: 12, marginBottom: 20 }}>Completed {moment().format('MMMM DD, YYYY')}</Text>\n          {questions.map((q, i) => {\n            const value = getValue(q, values)\n            const name = translateCopy(q.name)\n            const isPresentationalQuestion = q.type === 'sections' || q.type === 'instructions-only'\n            if (!value || (q.type === 'sections' && getSections(q.sections, form, values).length === 0)) {\n              return <View />\n            }\n            return (\n              <View style={{ marginBottom: 20 }} key={`${q.id}_${i}`}>\n                <Text style={styles.questionTitle}>\n                  {isPresentationalQuestion\n                    ? removeMarkdown(processLinks(translateCopy(q.instructions!)))\n                    : `${i + 1}. ${name}`}\n                </Text>\n\n                {value}\n              </View>\n            )\n          })}\n        </View>\n      </Page>\n    </Document>\n  )\n}\n\nexport default PDF\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Card, Button, Markdown } from './helper-components'\nimport { Box, ResponsiveContext, Heading } from 'grommet'\nimport Sidebar from './Sidebar'\nimport { FormContext } from '../contexts/form'\nimport Question from './Question'\nimport { FormPrevious, FormNext } from 'grommet-icons'\nimport PDF from './PDF'\nimport { pdf } from '@react-pdf/renderer'\nimport amplitude from 'amplitude-js'\n\nconst Form: React.FC<{}> = () => {\n  const { form, translateByID, translateCopy, completion, pageIndex, setPage, values } = useContext(FormContext)\n  const size = useContext(ResponsiveContext)\n\n  const pageTitles = [...form.pages.map((page) => translateCopy(page.title))]\n\n  const pageComponents = [\n    ...form.pages.map((page) => (\n      <Box direction=\"column\" justify=\"start\" key={page.heading.en} margin=\"none\">\n        <Box pad={{ horizontal: 'large' }}>\n          <Heading margin={{ horizontal: 'none', top: 'none', bottom: page.instructions ? '24px' : 'none' }} level={3}>\n            {translateCopy(page.heading)}\n          </Heading>\n          {page.instructions && <Markdown size=\"small\">{translateCopy(page.instructions)}</Markdown>}\n        </Box>\n        {page.questions.map((question) => (\n          <Question question={question} key={question.id} />\n        ))}\n      </Box>\n    )),\n  ]\n\n  const onClickNext = () => setPage(pageIndex + 1)\n  const onClickBack = () => setPage(pageIndex - 1)\n\n  const [previousURL, setPreviousURL] = useState<string>()\n  const onDownload = async () => {\n    console.log('[Google Analytics] sending event: Download')\n    gtag('event', 'Download')\n    amplitude.getInstance().logEvent('Download')\n\n    // NOTE: we use the imperative react-pdf API here instead of `BlobProvider` because BlobProvider\n    // renders the PDF in the foreground on document update, which blocks the UI. We only want to render\n    // the PDF after the user clicks on the download button so that we don't block UI updates as the\n    // user completes the form.\n    const fileName = 'new-jersey-eligiblity.pdf'\n    const blob = await pdf(<PDF form={form} values={values} translateCopy={translateCopy} />).toBlob()\n\n    if (!blob) {\n      // TODO: we should consider incorporating Sentry here.\n      gtag('event', 'PDF Generation Failed')\n      amplitude.getInstance().logEvent('PDF Generation Failed')\n      console.error('Failed to generate PDF')\n      return\n    }\n\n    // For most browsers, we can use the HTML5 download API. But for IE, we have to use\n    // the msSaveBlob API. This code is based on the react-pdf codebase.\n    if (window.navigator.msSaveBlob) {\n      window.navigator.msSaveBlob(blob, fileName)\n      return\n    }\n\n    // Attach a <a> element that we'll use to trigger the HTML5 download API\n    // for this blob:\n    const a = document.createElement('a')\n    a.setAttribute('style', 'display: none;')\n    document.body.appendChild(a)\n    const url = window.URL.createObjectURL(blob)\n    a.setAttribute('href', url)\n    a.setAttribute('download', fileName)\n    a.click()\n    if (previousURL) {\n      window.URL.revokeObjectURL(previousURL)\n    }\n    setPreviousURL(url)\n  }\n\n  // Track page views\n  useEffect(() => {\n    if (!form) {\n      return\n    }\n\n    console.log('[Google Analytics] sending page call: ', form.pages[pageIndex].title.en)\n    gtag('event', 'page_view', {\n      title: form.pages[pageIndex].title.en,\n    })\n    amplitude.getInstance().logEvent('Page View', {\n      title: form.pages[pageIndex].title.en,\n    })\n  }, [form, pageIndex])\n\n  return (\n    <Box align=\"center\" pad=\"medium\" direction=\"column\" width=\"100%\" style={{ maxWidth: '1200px' }}>\n      <Box width=\"100%\" height=\"100%\" justify=\"center\" direction={size === 'small' ? 'column' : 'row'}>\n        <Card justify=\"between\" flex={{ grow: 1, shrink: 1 }} pad={{ vertical: '48px' }}>\n          {pageComponents[pageIndex]}\n          <Box justify=\"between\" pad={{ horizontal: 'large' }} margin={{ top: '48px' }} direction=\"row\">\n            {(pageIndex > 0 && (\n              <Button onClick={onClickBack} label={translateByID('back')} icon={<FormPrevious />} />\n            )) || <Box />}\n            {pageIndex + 1 < pageTitles.length && (\n              <Button\n                primary={pageIndex === 0}\n                onClick={onClickNext}\n                disabled={!completion[pageIndex]}\n                icon={<FormNext />}\n                reverse={true}\n                label={pageIndex === 0 ? translateByID('get-started') : translateByID('next')}\n              />\n            )}\n            {pageIndex === pageTitles.length - 1 && null}\n            {pageIndex === pageTitles.length - 1 && (\n              <Button\n                primary={true}\n                disabled={!completion[pageIndex]}\n                label=\"Download\"\n                onClick={() => completion[pageIndex] && onDownload()}\n              />\n            )}\n          </Box>\n        </Card>\n        <Sidebar pages={pageTitles} />\n      </Box>\n    </Box>\n  )\n}\n\nexport default Form\n","import React from 'react'\nimport { Box, Image, Paragraph } from 'grommet'\n\n/**\n * The USDR component wraps an underlying component with USDR branding.\n */\nexport const USDR: React.FC = (props) => {\n  /**\n   * - Header with USDR logo, app name, link to GitHub\n   * - Footer with \"built by etc\", links to socials\n   */\n  return (\n    <Box direction=\"column\" height={{ min: '100vh' }}>\n      <Box>\n        <Header />\n      </Box>\n\n      <Box flex={{ grow: 1 }} align=\"center\">\n        {props.children}\n      </Box>\n\n      <Box>\n        <Footer />\n      </Box>\n    </Box>\n  )\n}\n\nconst Header: React.FC = () => {\n  // For now, we will not render a header.\n  return null\n\n  // return (\n  //   <Box background={{ color: '#FFFFFF' }} elevation=\"xsmall\" align=\"center\">\n  //     <Box\n  //       width=\"100%\"\n  //       justify=\"start\"\n  //       style={{ maxWidth: '1200px' }}\n  //       pad={{ horizontal: 'medium', vertical: '16px' }}\n  //       direction=\"row\"\n  //       align=\"center\"\n  //     >\n  //       <a href=\"https://www.usdigitalresponse.org/\" target=\"_blank\" rel=\"noopener noreferrer\" tabIndex={-1}>\n  //         <Image style={{ display: 'block' }} width=\"32px\" src=\"./USDR-icon-BW.png\" margin={{ right: '12px' }} />\n  //       </a>\n  //       <Heading level={4} margin=\"none\">\n  //         Pandemic Unemployment Assistance Demo\n  //       </Heading>\n  //     </Box>\n  //   </Box>\n  // )\n}\n\nconst Footer: React.FC = () => {\n  return (\n    <Box background={{ color: '#FFFFFF' }} elevation=\"medium\" align=\"center\">\n      <Box\n        width=\"100%\"\n        justify=\"start\"\n        style={{ maxWidth: '1200px' }}\n        pad={{ horizontal: 'medium', vertical: '16px' }}\n        direction=\"row\"\n        align=\"center\"\n      >\n        <Paragraph style={{ fontWeight: 600 }} size=\"small\">\n          Built by\n        </Paragraph>\n        <a href=\"https://www.usdigitalresponse.org/\" target=\"_blank\" rel=\"noopener noreferrer\" tabIndex={-1}>\n          <Image\n            style={{ display: 'block' }}\n            width=\"100px\"\n            src=\"./USDR-full-logo-color.png\"\n            margin={{ horizontal: '12px' }}\n          />\n        </a>\n        <Paragraph size=\"small\">a nonpartisan effort to assist the U.S. government.</Paragraph>\n      </Box>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Grommet } from 'grommet'\nimport './App.css'\nimport Form from './components/Form'\nimport { LanguageProvider } from './contexts/language'\nimport { FormProvider } from './contexts/form'\nimport { USDR } from './components/USDR'\nimport values from 'object.values'\nimport { TextEncoder } from 'fastestsmallesttextencoderdecoder'\nimport amplitude from 'amplitude-js'\n\namplitude.getInstance().init('f97e7157248bb243a19ad46f17cdf2d7')\n\n// Load shims\nif (!Object.values) {\n  values.shim()\n}\nif (!window.TextEncoder) {\n  window.TextEncoder = TextEncoder\n}\n\nconst sizing = {\n  header: '26px',\n  subheader: '18px',\n  body: '18px',\n  detail: '14px',\n}\n\nconst theme = {\n  global: {\n    colors: {\n      text: {\n        dark: 'white',\n        light: 'black',\n      },\n    },\n    focus: {\n      border: {\n        color: '#bfcffb',\n      },\n    },\n    text: {\n      align: 'left',\n    },\n    selected: {\n      background: '#F2F2F2',\n      color: 'black',\n    },\n    control: {\n      border: {\n        color: 'black',\n        radius: '4px',\n      },\n    },\n  },\n  paragraph: {\n    small: { size: sizing.detail },\n    medium: { size: sizing.body },\n    large: { size: sizing.body },\n    xlarge: { size: sizing.body },\n    xxlarge: { size: sizing.body },\n  },\n  heading: {\n    level: {\n      1: {\n        small: { size: sizing.header },\n        medium: { size: sizing.header },\n        large: { size: sizing.header },\n        xlarge: { size: sizing.header },\n        xxlarge: { size: sizing.header },\n      },\n      2: {\n        small: { size: sizing.header },\n        medium: { size: sizing.header },\n        large: { size: sizing.header },\n        xlarge: { size: sizing.header },\n        xxlarge: { size: sizing.header },\n      },\n      3: {\n        small: { size: sizing.header },\n        medium: { size: sizing.header },\n        large: { size: sizing.header },\n        xlarge: { size: sizing.header },\n        xxlarge: { size: sizing.header },\n      },\n      4: {\n        small: { size: sizing.subheader },\n        medium: { size: sizing.subheader },\n        large: { size: sizing.subheader },\n        xlarge: { size: sizing.subheader },\n        xxlarge: { size: sizing.subheader },\n      },\n      5: {\n        small: { size: sizing.subheader },\n        medium: { size: sizing.subheader },\n        large: { size: sizing.subheader },\n        xlarge: { size: sizing.subheader },\n        xxlarge: { size: sizing.subheader },\n      },\n      6: {\n        small: { size: sizing.detail },\n        medium: { size: sizing.detail },\n        large: { size: sizing.detail },\n        xlarge: { size: sizing.detail },\n        xxlarge: { size: sizing.detail },\n      },\n    },\n  },\n  select: {\n    icons: {\n      color: '#000000',\n    },\n    options: {\n      text: {\n        color: 'black',\n      },\n    },\n    container: {\n      borderRadius: '4px',\n    },\n  },\n  radioButton: {\n    gap: '16px',\n  },\n  button: {\n    border: {\n      color: 'transparent',\n    },\n    primary: {\n      color: '#4776f6',\n    },\n  },\n  checkBox: {\n    color: '#FFFFFF',\n    check: {\n      color: '#205EFF',\n    },\n    gap: '16px',\n  },\n}\n\nfunction App() {\n  // `theme as any` because grommet has incomplete TS definitions\n  return (\n    <Grommet className=\"App\" theme={theme as any}>\n      <LanguageProvider>\n        <FormProvider>\n          <USDR>\n            <Form />\n          </USDR>\n        </FormProvider>\n      </LanguageProvider>\n    </Grommet>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}